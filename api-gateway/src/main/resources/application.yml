spring:
  application:
    name: api-gateway
  session:
    store-type: redis
  cloud:
    gateway:
      server:
        webflux:
          routes:
            - id: user-service-route
              uri: lb://user-service
              predicates:
                - Path=/api/v1/users/**
              filters:
                - TokenRelay=

            - id: role-service-route
              uri: lb://user-service
              predicates:
                - Path=/api/v1/roles/**
              filters:
                - TokenRelay=

            - id: permission-service-route
              uri: lb://user-service
              predicates:
                - Path=/api/v1/permissions/**
              filters:
                - TokenRelay=

            - id: customer-service-route
              uri: lb://customer-service
              predicates:
                - Path=/api/v1/customers/**
              filters:
                - TokenRelay=

            - id: user-service-openapi-route
              uri: lb://user-service
              predicates:
                - Path=/v3/api-docs/user-service
              filters:
                - RewritePath=/v3/api-docs/user-service, /v3/api-docs

            - id: customer-service-openapi-route
              uri: lb://customer-service
              predicates:
                - Path=/v3/api-docs/customer-service
              filters:
                - RewritePath=/v3/api-docs/customer-service, /v3/api-docs

  security:
    oauth2:
      client:
        registration:
          proptech-bff:
            provider: spring
            client-id: "bff-client"
            client-secret: "secret"
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, profile, offline_access
        provider:
          spring:
            issuer-uri: https://dev.proptech.com

springdoc:
  swagger-ui:
    urls:
      - name: User Service
        url: /v3/api-docs/user-service
      - name: Customer Service
        url: /v3/api-docs/customer-service

management:
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus"
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true