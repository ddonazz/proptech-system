services:
  auth-service:
    build:
      context: /auth-service
      dockerfile: Dockerfile
    image: nndrez/auth-service
    container_name: auth-service
    restart: on-failure
    ports:
      - "9000:8080"
    networks:
      - app-network
    depends_on:
      - user-service

  api-gateway:
    build:
      context: /api-gateway
      dockerfile: Dockerfile
    image: nndrez/api-gateway
    container_name: api-gateway
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - auth-service
      - user-service

  user-db:
    image: postgres:18-alpine
    container_name: user-postgres-db
    restart: always
    environment:
      POSTGRES_DB: ${USER_POSTGRES_DB}
      POSTGRES_USER: ${USER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${USER_POSTGRES_PASSWORD}
    volumes:
      - user-postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  user-service:
    build:
      context: /user-service
      dockerfile: Dockerfile
    image: nndrez/user-service
    container_name: user-service
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/${USER_POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${USER_POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${USER_POSTGRES_PASSWORD}
    depends_on:
      - user-db
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - user-db
    networks:
      - app-network

volumes:
  user-postgres-data:
    driver: local
  pgadmin-data:
    driver: local

networks:
  app-network:
    driver: bridge