services:
  auth-service:
    build:
      context: /auth-service
      dockerfile: Dockerfile
    image: nndrez/auth-service
    container_name: auth-service
    restart: on-failure
    ports:
      - "9000:8080"
    networks:
      - app-network
    depends_on:
      - user-service

  api-gateway:
    build:
      context: /api-gateway
      dockerfile: Dockerfile
    image: nndrez/api-gateway
    container_name: api-gateway
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - auth-service
      - user-service

  user-db:
    image: postgres:18-alpine
    container_name: user-postgres-db
    restart: always
    environment:
      POSTGRES_DB: ${USER_POSTGRES_DB}
      POSTGRES_USER: ${USER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${USER_POSTGRES_PASSWORD}
    volumes:
      - user-postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  user-service:
    build:
      context: /user-service
      dockerfile: Dockerfile
    image: nndrez/user-service
    container_name: user-service
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/${USER_POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${USER_POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${USER_POSTGRES_PASSWORD}
    depends_on:
      - user-db
      - rabbitmq
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - user-db
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:4.1.4-management-alpine
    container_name: rabbitmq
    restart: on-failure
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_running", "-q" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  mail-service:
    build:
      context: /mail-service
      dockerfile: Dockerfile
    image: nndrez/mail-service
    container_name: mail-service
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_MAIL_HOST: ${SPRING_MAIL_HOST}
      SPRING_MAIL_PORT: ${SPRING_MAIL_PORT}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH}
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE}
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy

volumes:
  user-postgres-data:
    driver: local
  pgadmin-data:
    driver: local
  rabbitmq-data:
    driver: local

networks:
  app-network:
    driver: bridge